---

- name: Misc - Save application state on quit ({{ system.misc.save_application_state_on_quit }}).
  osx_defaults:
    key: NSQuitAlwaysKeepsWindows
    type: bool
    value: "{{ system.misc.save_application_state_on_quit | bool }}"

- name: Misc - Disable creating .DS_Store files on network shares ({{ system.misc.disable_dsstore_on_network_shares }}).
  osx_defaults:
    domain: com.apple.desktopservices
    key: DSDontWriteNetworkStores
    type: bool
    value: "{{ system.misc.disable_dsstore_on_network_shares | bool }}"

- name: Misc - Disable creating .DS_Store files on usb drives ({{ system.misc.disable_dsstore_on_usb_drives }}).
  osx_defaults:
    domain: com.apple.desktopservices
    key: DSDontWriteUSBStores
    type: bool
    value: "{{ system.misc.disable_dsstore_on_usb_drives | bool }}"

- name: Misc - Disable disk image verification ({{ system.misc.disable_disk_image_verification }}).
  osx_defaults:
    domain: com.apple.frameworks.diskimages
    key: "{{ item }}"
    type: bool
    value: "{{ system.misc.disable_disk_image_verification | bool }}"
  with_items:
    - skip-verify
    - skip-verify-locked
    - skip-verify-remote

- name: Misc - Enable crash reporter ({{ system.misc.enable_crash_reporter }}).
  osx_defaults:
    domain: com.apple.CrashReporter
    state: "{{ 'absent' if system.misc.enable_crash_reporter else 'present' }}"
    key: DialogType
    type: string
    value: "none"

- name: Misc - Save new docs to icloud by default ({{ system.misc.save_new_docs_to_icloud }}).
  osx_defaults:
    key: NSDocumentSaveNewDocumentsToCloud
    type: bool
    value: "{{ system.misc.save_new_docs_to_icloud | bool }}"

- name: Misc - Get ssh service status.
  shell: systemsetup -getremotelogin
  register: ssh_status
  changed_when: false
  become: yes

# - name: Misc - Enable ssh ({{ system.misc.enable_ssh }}).
#   command: "systemsetup -f -setremotelogin {{ 'on' if system.misc.enable_ssh else 'off' }} /System/Library/LaunchDaemons/ssh.plist"
#   become: yes
#   when: ssh_status.stdout.find("Off") != -1 and system.misc.enable_ssh or ssh_status.stdout.find("On") != -1 and not system.misc.enable_ssh
#   register: enable_ssh_result
#   changed_when: "not enable_ssh_result.stdout|regex_search('already')"

- name: Misc - Read hibernation setting.
  shell: pmset -g | grep hibernatemode
  register: hibernate_status
  changed_when: false

# speeds up entering sleep mode when disabled
- name: Misc - Enable hibernation ({{ system.misc.enable_hibernation }}).
  become: true
  shell: pmset -a hibernatemode {{ 3 if system.misc.enable_hibernation else system.misc.enable_hibernation | int }}
  when: (hibernate_status.stdout.find("3") != -1 and not system.misc.enable_hibernation) or
        (hibernate_status.stdout.find("0") != -1 and system.misc.enable_hibernation)

- name: Misc - Read sudden motion sensor setting.
  shell: pmset -g | grep sms
  register: sms_status
  changed_when: false
  failed_when: false

- name: Misc - Enable sudden motion sensor ({{ system.misc.enable_sudden_motion_sensor }}).
  become: true
  shell: pmset -a sms "{{ system.misc.enable_sudden_motion_sensor | int }}"
  when:
    - sms_status.stdout != ""
    - (sms_status.stdout.find("1") != -1 and not system.misc.enable_sudden_motion_sensor) or
      (sms_status.stdout.find("0") != -1 and system.misc.enable_sudden_motion_sensor)

- name: Misc - Disable spotlight indexing network volumes ({{ system.misc.disable_spotlight_network_indexing }}).
  become: true
  osx_defaults:
    domain: /Library/Preferences/com.apple.SpotlightServer.plist
    key: ExternalVolumesIgnore
    type: bool
    value: "{{ system.misc.disable_spotlight_network_indexing | bool }}"

#- name: Misc - Remove duplicates in the “Open With” menu.
#  command: /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local
